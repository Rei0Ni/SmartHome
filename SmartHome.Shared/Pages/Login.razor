@page "/login"
@layout AuthLayout

<div class="logo">
    <img src="_content/SmartHome.Shared/imgs/logoSmart.png" alt="logo" />
</div>

<div class="text">
    Login
</div>
<form>
    <div class="data">
        <label>User Name</label>
        <input type="text" placeholder="username" @bind="LoginModel.Username">
        @if (!string.IsNullOrEmpty(usernameErrorMessage))
        {
            <p class="error-message">@usernameErrorMessage</p>
        }
    </div>
    <div class="data">
        <label>Password</label>
        <input type="password" placeholder="password" @bind="LoginModel.Password">
        @if (!string.IsNullOrEmpty(passwordErrorMessage)) 
        {
            <p class="error-message">@passwordErrorMessage</p>
        }
    </div>
    <div class="forgot-pass">
        <a href="#">Forgot Password?</a>
    </div>
    <div class="LoginBtn">
        <button @onclick="HandleLogin" type="button">Sign in</button>
    </div>
</form>

@code {
    private LoginDto LoginModel = new();
    private string usernameErrorMessage;
    private string passwordErrorMessage;

    private async void HandleLogin()
    {
        usernameErrorMessage = null;  // Clear previous error messages
        passwordErrorMessage = null;

        if (string.IsNullOrWhiteSpace(LoginModel.Username))
        {
            ShowUsernameError("Please fill user name.");
        }
        if (string.IsNullOrWhiteSpace(LoginModel.Password))
        {
            ShowPasswordError("Please fill password.");
        }

        // Remember to handle API call in this location
        var result = await authStateProvider.Login(LoginModel);
        if (result.IsSuccessStatusCode)
        {
            navigationManager.NavigateTo("/", true);
        }
        else if (result.StatusCode == HttpStatusCode.BadRequest)
        {
            var ErrorResposne = await result.Content.ReadFromJsonAsync<ApiResponse<List<LoginErrorResponse>>>();
            Console.WriteLine(ErrorResposne.Message.ToString());
        }
		else if (result.StatusCode == HttpStatusCode.Unauthorized)
		{
            var ErrorResposne = await result.Content.ReadFromJsonAsync<ApiResponse<object>>();
            Console.WriteLine(ErrorResposne.Message.ToString());
		}
    }

    private void ShowUsernameError(string message)
    {
        usernameErrorMessage = message;
    }

    private void ShowPasswordError(string message)
    {
        passwordErrorMessage = message;
    }
}
