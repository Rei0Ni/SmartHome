@page "/edit-user/{UserId}"
@using System.Text.Json
@layout MainLayout

<AuthorizeView>
    <Authorized>
        <h3>Edit User Profile</h3>
        @if (isLoading)
        {
            <p>Loading user data...</p>
        }
        else
        {
            <EditForm Context="editUserContext" Model="(isAdminProfile ? (object)adminProfile : (object)userProfile)" OnValidSubmit="SubmitForm">
                <DataAnnotationsValidator />
                <ValidationSummary />

                @* <div class="form-group"> *@
                @*     <label>User ID</label> *@
                @*     <InputText @bind-Value="UserId" class="form-control" disabled /> *@
                @* </div> *@
                <div class="form-group">
                    <label>First Name</label>
                    @if (isAdminProfile)
                    {
                        <InputText @bind-Value="adminProfile.FirstName" class="form-control" />
                    }
                    else
                    {
                        <InputText @bind-Value="userProfile.FirstName" class="form-control" />
                    }
                </div>
                <div class="form-group">
                    <label>Last Name</label>
                    @if (isAdminProfile)
                    {
                        <InputText @bind-Value="adminProfile.LastName" class="form-control" />
                    }
                    else
                    {
                        <InputText @bind-Value="userProfile.LastName" class="form-control" />
                    }
                </div>
                @if (isAdminProfile)
                {
                    <div class="form-group">
                        <label>Email</label>
                        <InputText @bind-Value="adminProfile.Email" class="form-control" />
                    </div>
                }
                <button type="submit" class="btn btn-primary">Save Changes</button>
            </EditForm>
        }
    </Authorized>
    <NotAuthorized>
        <p>You are not authorized to edit user profiles.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter]
    public string UserId { get; set; } = string.Empty;

    private bool isLoading = true;
    private bool isAdminProfile = false;
    private UpdateAdminUserProfileDto adminProfile = new();
    private UpdateUserProfileDto userProfile = new();

    protected override async Task OnInitializedAsync()
    {
        // Retrieve user profile details using the UserId route parameter.
        var result = await ApiService.GetAsync($"/api/user/get/{UserId}");
        if (result.IsSuccessStatusCode)
        {
            var content = await result.Content.ReadFromJsonAsync<ApiResponse<JsonElement>>();
            if (content != null)
            {
                var root = content.Data;
                // Determine which DTO to use based on the presence of the 'email' property.
                if (root.TryGetProperty("email", out _))
                {
                    isAdminProfile = true;
                    adminProfile = JsonSerializer.Deserialize<UpdateAdminUserProfileDto>(
                        root.GetRawText(),
                        new JsonSerializerOptions { PropertyNameCaseInsensitive = true }
                    )!;
                }
                else
                {
                    isAdminProfile = false;
                    userProfile = JsonSerializer.Deserialize<UpdateUserProfileDto>(
                        root.GetRawText(),
                        new JsonSerializerOptions { PropertyNameCaseInsensitive = true }
                    )!;
                }
            }
            else
            {
                toastService.Notify(new ToastMessage(ToastType.Danger, IconName.Bug, "Failed to load user data.", "Couldn't load the User Data"));
            }
        }
        else
        {
            toastService.Notify(new ToastMessage(ToastType.Danger, IconName.Bug, "Failed to load user data.", "Couldn't load the User Data"));
        }
        isLoading = false;
    }

    private async Task SubmitForm()
    {
        HttpResponseMessage response;
        if (isAdminProfile)
        {
            response = await ApiService.SendAsync(HttpMethod.Put, "/api/user/update/admin", adminProfile);
        }
        else
        {
            response = await ApiService.SendAsync(HttpMethod.Put, "/api/user/update/", userProfile);
        }

        if (response.IsSuccessStatusCode)
        {
            toastService.Notify(new(ToastType.Success, IconName.HandThumbsUp, "User profile updated successfully.", "User profile has been updated successfully"));
            navigationManager.NavigateTo("/manage-users");
        }
        else
        {
            var responseContent = response.Content.ReadAsStringAsync();
            toastService.Notify(new(ToastType.Danger, IconName.Bug, "Failed to update user profile.", "Couldn't update user profile"));
        }
    }
}
