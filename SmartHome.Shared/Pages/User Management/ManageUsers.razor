@page "/manage-users"
@using System.Text.Json
@layout MainLayout

<PageTitle>Manage Users</PageTitle>

<AuthorizeView>
    <Authorized>
        @if (!context.User.IsInRole("Admin"))
        {
            toastService.Notify(new(ToastType.Warning, IconName.ExclamationTriangle, "Not Authorized", "You are NOT Authorized to be Here"));
        }

        <!-- Header Section -->
        <div class="flex justify-between items-center mb-6 px-4">
            <h3 class="text-2xl font-semibold text-gray-800">Manage Users</h3>
            <button class="px-4 py-2  text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2" style="background-color:var(--primary)"
            @onclick="NavigateToUserCreation">
                <i class="bi bi-person-plus"></i>
                New User
            </button>
        </div>

        <!-- Users Table -->
        <div class="bg-white rounded-xl shadow-sm overflow-hidden">
            <div class="overflow-x-auto rounded-lg shadow-sm border border-gray-200">
                @if (isLoading){
                    <div class="text-center py-12">
                        <p>Loading Users</p>
                        <div class="flex justify-center align-center mt-2" role="status">
                            <svg aria-hidden="true" class="inline w-8 h-8 text-gray-200 animate-spin dark:text-gray-600 fill-purple-600" viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z" fill="currentColor" />
                                <path d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z" fill="#7e6ab2" />
                            </svg>
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                }
                else{
                    @if (users.Count == 0)
                    {
                        <div class="text-center py-12">
                            <p>There are no users here yet.</p>
                            <button class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white"
                                    style="background-color:var(--primary)"
                                    onmouseover="this.style.opacity='0.85'"
                                    onmouseout="this.style.opacity='1'"
                                    @onclick="NavigateToUserCreation">
                                Create a New User
                            </button>
                        </div>
                    }
                    else
                    {
                        <table class="w-full min-w-[800px]">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-4 py-3 text-left text-sm font-medium text-gray-700">Username</th>
                                    <th class="hidden sm:table-cell px-4 py-3 text-left text-sm font-medium text-gray-700">First Name</th>
                                    <th class="hidden sm:table-cell px-4 py-3 text-left text-sm font-medium text-gray-700">Last Name</th>
                                    <th class="hidden sm:table-cell px-4 py-3 text-left text-sm font-medium text-gray-700 break-all">Email</th>
                                    <th class="px-4 py-3 text-left text-sm font-medium text-gray-700">Last Login</th>
                                    <th class="px-4 py-3 text-left text-sm font-medium text-gray-700">Role</th>
                                    <th class="px-4 py-3 text-left text-sm font-medium text-gray-700">Actions</th>
                                </tr>
                            </thead>
                            <tbody class="divide-y divide-gray-200">
                                @foreach (var user in users)
                                {
                                    <tr class="hover:bg-gray-50 transition-colors">
                                        <td class="px-4 py-3 text-sm text-gray-700">@user.Username</td>
                                        <td class="hidden sm:table-cell px-4 py-3 text-sm text-gray-700">@user.FirstName</td>
                                        <td class="hidden sm:table-cell px-4 py-3 text-sm text-gray-700">@user.LastName</td>
                                        <td class="hidden sm:table-cell px-4 py-3 text-sm text-gray-700 break-all">@user.Email</td>
                                        <td class="px-4 py-3 text-sm text-gray-700">@user.LastLogin</td>
                                        <td class="px-4 py-3 text-sm text-gray-700">@user.Role.Replace("_", " ")</td>
                                        <td class="px-4 py-3">
                                            <div class="flex items-center gap-2">
                                                <button class="px-3 py-1.5  text-white rounded-md hover:bg-blue-700 transition-colors text-sm" style="background-color:var(--primary)"
                                                        @onclick="@(() => navigationManager.NavigateTo($"/edit-user/{user.UserId.ToString()}"))">
                                                    Edit
                                                </button>
                                                <button class="px-3 py-1.5 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors text-sm"
                                                        @onclick="() => ConfirmDelete(user)">
                                                    Delete
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                }
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        @{
            navigationManager.NavigateTo("/");
        }
    </NotAuthorized>
</AuthorizeView>

<!-- Delete Modal -->
@if (showDeleteModal)
{
    <div class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50">
        <div class="bg-white rounded-lg p-6 max-w-xs w-full mx-4">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-lg font-semibold m-0">Confirm Deletion</h3>
                <button class="text-gray-500 hover:text-gray-700 flex items-center gap-2"
                @onclick="CloseDeleteModal">
                    <i class="fas fa-x text-md text-black pe-2"></i>
                </button>
            </div>
            <p class="mb-6 text-gray-600">Are you sure you want to delete @selectedUser?.Username?</p>
            <div class="flex justify-end gap-3">
                <button class="px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300"
                @onclick="CloseDeleteModal">
                    Cancel
                </button>
                <button class="px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700"
                @onclick="DeleteUser">
                    Delete
                </button>
            </div>
        </div>
    </div>
}



@code {
    List<UserWithRolesDto> users = new List<UserWithRolesDto>();
    private bool showDeleteModal = false;
    private UserWithRolesDto? selectedUser;

    private bool isLoading = false;

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;

        await base.OnInitializedAsync();
        var result = await ApiService.GetAsync("api/user/get/all");
        if (result.IsSuccessStatusCode)
        {
            var content = await result.Content.ReadAsStringAsync();
            var response = JsonSerializer.Deserialize<ApiResponse<object>>(content, new JsonSerializerOptions { PropertyNameCaseInsensitive = true, PropertyNamingPolicy = JsonNamingPolicy.CamelCase });
            if (response!.Status == "Error")
            {
                // Show error message in toast
            }
            else
            {
                users = JsonSerializer.Deserialize<List<UserWithRolesDto>>(response.Data.ToString()!, new JsonSerializerOptions { PropertyNameCaseInsensitive = true, PropertyNamingPolicy = JsonNamingPolicy.CamelCase })!;
            }
        }
        else
        {
            // Show error message in toast
        }

        isLoading = false;
    }

    private void NavigateToUserCreation()
    {
        navigationManager.NavigateTo("/create-user");
    }

    private void ConfirmDelete(UserWithRolesDto user)
    {
        selectedUser = user;
        showDeleteModal = true;
    }

    private void CloseDeleteModal()
    {
        showDeleteModal = false;
        selectedUser = null;
    }

    private async Task DeleteUser()
    {
        if (selectedUser != null)
        {

            var result = await ApiService.SendAsync<object>(HttpMethod.Delete, $"api/user/delete/{selectedUser.UserId}");
            if (result.IsSuccessStatusCode)
            {
                users.Remove(selectedUser);
				toastService.Notify(new(ToastType.Success, IconName.CheckCircle, "Success", $"{selectedUser.Username} has been deleted successfully"));
            }
            else
            {
                // Show error message in toast
				toastService.Notify(new(ToastType.Danger, IconName.Bug, "Error", $"Failed to delete {selectedUser.Username}"));
            }
            showDeleteModal = false;
            selectedUser = null;
        }
    }
}
