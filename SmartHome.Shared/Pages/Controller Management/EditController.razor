@page "/edit-controller/{Id}"
@using SmartHome.Dto.Area
@using System.Text.Json
@using Microsoft.AspNetCore.Components.Web
@using SmartHome.Dto.Controller
@layout MainLayout

<PageTitle>Edit Controller</PageTitle>

<AuthorizeView Roles="Admin">
    <Authorized>
        @{
            IsAdmin = context.User.IsInRole("Admin");
        }

        <div class="max-w-4xl mx-auto bg-surface rounded-lg shadow-sm mb-3 border border-gray-200 dark:border-gray-700">
            <div class="px-6 py-5 border-b border-gray-200 dark:border-gray-700">
                <h3 class="text-xl sm:text-2xl font-bold text-gray-800 dark:text-gray-50">Edit Controller</h3>
                <p class="text-gray-600 dark:text-gray-50 mt-2 text-sm sm:text-base">Fill in the details below to update the controller</p>
            </div>

            <EditForm Context="controllerEditContext"
                      Model="NewController"
                      OnValidSubmit="SubmitUpdateControllerForm"
                      class="p-6 md:p-8">
                <DataAnnotationsValidator />

                <div class="space-y-4 sm:space-y-6">
                    <!-- Name & MAC Address Row -->
                    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 sm:gap-6">
                        <!-- Name Field -->
                        <div>
                            <label class="block text-sm sm:text-base font-medium text-gray-700 dark:text-gray-50 mb-1">Controller Name</label>
                            <div class="mt-1">
                                <InputText @bind-Value="NewController.Name"
                                           class="w-full px-3 py-2 border border-gray-300 dark:bg-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                           placeholder="Enter controller name" />
                                <ValidationMessage For="@(() => NewController.Name)"
                                                   class="text-red-600 text-sm mt-1" />
                            </div>
                        </div>

                        <!-- MAC Address Field -->
                        <div>
                            <label class="block text-sm sm:text-base font-medium text-gray-700 dark:text-gray-50 mb-1">MAC Address</label>
                            <div class="mt-1">
                                <InputText @bind-Value="NewController.MACAddress"
                                           class="w-full px-3 py-2 border border-gray-300 dark:bg-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                           placeholder="00:1A:2B:3C:4D:5E" />
                                <ValidationMessage For="@(() => NewController.MACAddress)"
                                                   class="text-red-600 text-sm mt-1" />
                            </div>
                        </div>
                    </div>

                    <!-- IP Address Field -->
                    <div>
                        <label class="block text-sm sm:text-base font-medium text-gray-700 dark:text-gray-50 mb-1">IP Address</label>
                        <div class="mt-1">
                            <InputText @bind-Value="NewController.IPAddress"
                                       class="w-full px-3 py-2 border border-gray-300 dark:bg-white rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                       placeholder="192.168.1.1" />
                            <ValidationMessage For="@(() => NewController.IPAddress)"
                                               class="text-red-600 text-sm mt-1" />
                        </div>
                    </div>

                    <!-- Error Message -->
                    @if (!string.IsNullOrEmpty(ErrorMessage))
                    {
                        <div class="bg-red-50 border-l-4 border-red-400 p-4">
                            <div class="flex">
                                <div class="flex-shrink-0">
                                    <i class="fas fa-exclamation-circle text-red-400"></i>
                                </div>
                                <div class="ml-3">
                                    <p class="text-sm text-red-700">@ErrorMessage</p>
                                </div>
                            </div>
                        </div>
                    }

                    <!-- Submit Button -->
                    <div class="pt-4 sm:pt-6">
                        <button type="submit"
                                class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white cursor-pointer"
                                style="background-color:var(--primary)"
                                onmouseover="this.style.opacity='0.85'"
                                onmouseout="this.style.opacity='1'">
                            <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                                <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" />
                            </svg>
                            Save Changes
                        </button>
                    </div>
                </div>
            </EditForm>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="text-center p-6 sm:p-8">
            <div class="mx-auto max-w-md">
                <svg class="mx-auto h-12 w-12 text-red-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636" />
                </svg>
                <h3 class="mt-2 text-lg sm:text-xl font-semibold text-gray-800 dark:text-gray-50 mb-2">Unauthorized Access</h3>
                <p class="text-gray-600 dark:text-gray-200 text-sm sm:text-base">You don't have permission to edit controllers.</p>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter]
    public string Id { get; set; } = string.Empty;

    private UpdateControllerDto NewController = new();
    private bool IsAdmin;
    private string ErrorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var result = await ApiService.GetAsync($"/api/controller/get/{Id}");
        if (result.IsSuccessStatusCode)
        {
            var content = await result.Content.ReadFromJsonAsync<ControllerDto>();
            if (content != null)
            {
                NewController.Name = content.Name;
                NewController.MACAddress = content.MACAddress;
                NewController.IPAddress = content.IPAddress;
            }
            else
            {
                toastService.ShowError("Couldn't load the Controller Data");
            }
        }
        else
        {
            toastService.ShowError("Couldn't load the Controller Data");
        }
    }

    private async Task SubmitUpdateControllerForm()
    {
        try
        {
            NewController.Id = Guid.Parse(Id);
            HttpResponseMessage result = await ApiService.SendAsync<UpdateControllerDto>(HttpMethod.Put, "/api/controller/update", NewController);

            if (result.StatusCode == HttpStatusCode.NoContent)
            {
                toastService.ShowSuccess("The Controller was Updated Successfully");
                NewController = new UpdateControllerDto();
                StateHasChanged();
                navigationManager.NavigateTo("/manage-controllers", false, false);
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = "An unexpected error occurred: " + ex.Message;
        }
    }
}
