@page "/manage-controllers"
@using System.Text.Json
@using SmartHome.Dto.Controller
@layout MainLayout

<AuthorizeView>
    <Authorized>
        @if (!context.User.IsInRole("Admin"))
        {
            @* navigationManager.NavigateTo("/overview"); *@
            toastService.Notify(new(ToastType.Warning, IconName.ExclamationTriangle, "Not Authorized", "You are NOT Authorized to be Here"));
        }
        <div class="flex justify-between items-center mb-6 px-4">
            <h3 class="text-2xl font-semibold text-gray-800">Manage Controllers</h3>
            <button class="px-4 py-2 text-white rounded-lg hover:bg-green-700 transition-colors" style="background-color:var(--primary)"
                    @onclick="NavigateToControllerCreation">
                <i class="fas fa-plus mr-2"></i>New Controller
            </button>
        </div>

        @if (controllers.Count == 0)
        {
            <div class="text-center mt-12 p-8 bg-gray-50 rounded-xl">
                <p class="text-gray-600 mb-4">There are no Controllers here yet.</p>
                <button class="px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors"
                        @onclick="NavigateToControllerCreation">
                    Create New Controller
                </button>
            </div>
        }
        else
        {
            <div class="overflow-x-auto rounded-lg shadow-sm border border-gray-200">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Mac Address</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">IP Address</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @foreach (var controller in controllers)
                        {
                            <tr class="hover:bg-gray-50 transition-colors">
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@controller.Name</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@controller.MACAddress</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@controller.IPAddress</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm space-x-2">
                                    <button class="px-3 py-1.5  text-white rounded-md hover:bg-blue-700 transition-colors" style="background-color:var(--primary)"
                                            @onclick="@(() => navigationManager.NavigateTo($"/edit-controller/{controller.Id.ToString()}"))">
                                        Edit
                                    </button>
                                    <button class="px-3 py-1.5 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors"
                                            @onclick="() => ConfirmDelete(controller)">
                                        Delete
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </Authorized>
    <NotAuthorized>
        @{
            navigationManager.NavigateTo("/");
            toastService.Notify(new(ToastType.Warning, IconName.ExclamationTriangle, "Not Authorized", "You are NOT Authorized to be Here"));
        }
    </NotAuthorized>
</AuthorizeView>

@if (showDeleteModal)
{
    <div class="fixed inset-0 z-50 overflow-y-auto">
        <div class="flex items-center justify-center min-h-screen px-4 text-center">
            <!-- الخلفية المعتمة -->
            <div class="fixed inset-0 transition-opacity" aria-hidden="true">
                <div class="absolute inset-0 bg-gray-500 opacity-75"></div>
            </div>

            <!-- محتوى الـ Modal -->
            <div class="inline-block align-middle bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all w-full max-w-lg mx-4 my-8">
                <!-- محتوى النص -->
                <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                    <div class="sm:flex sm:items-start">
                        <div class="mt-3 text-center sm:mt-0 sm:text-left w-full">
                            <h3 class="text-lg leading-6 font-medium text-gray-900">Confirm Deletion</h3>
                            <div class="mt-2">
                                <p class="text-sm text-gray-500">Are you sure you want to delete @selectedController?.Name?</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- الأزرار -->
                <div class="bg-gray-50 px-4 py-3 flex flex-col-reverse sm:flex-row sm:justify-end gap-3">
                    <button type="button"
                            class="w-full sm:w-auto inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none sm:text-sm"
                            @onclick="CloseDeleteModal">
                        Cancel
                    </button>
                    <button type="button"
                            class="w-full sm:w-auto inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none sm:text-sm"
                            @onclick="DeleteController">
                        Delete
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    List<ControllerDto> controllers = new List<ControllerDto>();
    private bool showDeleteModal = false;
    private ControllerDto? selectedController;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var result = await ApiService.GetAsync("api/controller/get/all");
        if (result.IsSuccessStatusCode)
        {
            var content = await result.Content.ReadFromJsonAsync<List<ControllerDto>>();
            controllers = content;
        }
        else
        {
            // Show error message in toast
        }
    }

    private void NavigateToControllerCreation()
    {
        navigationManager.NavigateTo("/create-controller");
    }

    private void ConfirmDelete(ControllerDto controller)
    {
        selectedController = controller;
        showDeleteModal = true;
    }

    private void CloseDeleteModal()
    {
        showDeleteModal = false;
        selectedController = null;
    }

    private async Task DeleteController()
    {
        if (selectedController != null)
        {
            var result = await ApiService.SendAsync<object>(HttpMethod.Delete, $"api/controller/delete/{selectedController.Id}");
            if (result.IsSuccessStatusCode)
            {
                controllers.Remove(selectedController);
            }
            else
            {
                // Show error message in toast
            }
            showDeleteModal = false;
            selectedController = null;
        }
    }
}