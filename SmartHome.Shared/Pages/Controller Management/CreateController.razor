
@page "/create-controller"
@using SmartHome.Dto.Area
@using System.Text.Json
@using Microsoft.AspNetCore.Components.Web
@using SmartHome.Dto.Controller
@layout MainLayout

<AuthorizeView>
    <Authorized>
        @{
            IsAdmin = context.User.IsInRole("Admin");
        }

        <div class="max-w-4xl mx-auto bg-white rounded-lg shadow-sm border border-gray-200 ">
            <div class="px-6 py-5 border-b border-gray-200">
                <h3 class="text-xl sm:text-2xl font-bold text-gray-800">Create New Controller</h3>
                <p class="text-gray-600 mt-2 text-sm sm:text-base">Fill in the details below to add a new controller</p>
            </div>

            <EditForm Context="controllerCreationContext" Model="NewController" OnValidSubmit="SubmitCreateControllerForm" class=" p-6 md:p-8">
                <DataAnnotationsValidator />

                <div class="space-y-4 sm:space-y-6">
                    <!-- Name & MAC Address Row -->
                    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 sm:gap-6">
                        <!-- Name Field -->
                        <div>
                            <label class="block text-sm sm:text-base font-medium text-gray-700 mb-1">Controller Name</label>
                            <div class="mt-1">
                                <InputText @bind-Value="NewController.Name"
                                           class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 valid"
                                           placeholder="Enter controller name" />
                                <ValidationMessage For="@(() => NewController.Name)"
                                                   class="text-red-600 text-sm mt-1" />
                            </div>
                        </div>

                        <!-- MAC Address Field -->
                        <div>
                            <label class="block text-sm sm:text-base font-medium text-gray-700 mb-1">MAC Address</label>
                            <div class="mt-1">
                                <InputText @bind-Value="NewController.MACAddress"
                                           type="text"
                                           class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 valid"
                                           placeholder="00:1A:2B:3C:4D:5E" />
                                <ValidationMessage For="@(() => NewController.MACAddress)"
                                                   class="text-red-600 text-sm mt-1" />
                            </div>
                        </div>
                    </div>

                    <!-- IP Address Field -->
                    <div>
                        <label class="block text-sm sm:text-base font-medium text-gray-700 mb-1">IP Address</label>
                        <div class="mt-1">
                            <InputText @bind-Value="NewController.IPAddress"
                                       type="text"
                                       class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 validt"
                                       placeholder="192.168.1.1" />
                            <ValidationMessage For="@(() => NewController.IPAddress)"
                                               class="text-red-600 text-sm mt-1" />
                        </div>
                    </div>

                    <!-- Error Message -->
                    @if (!string.IsNullOrEmpty(ErrorMessage))
                    {
                        <div class="bg-red-50 border-l-4 border-red-400 p-4">
                            <div class="flex">
                                <div class="flex-shrink-0">
                                    <i class="fas fa-exclamation-circle text-red-400"></i>
                                </div>
                                <div class="ml-3">
                                    <p class="text-sm text-red-700">@ErrorMessage</p>
                                </div>
                            </div>
                        </div>
                    }

                    <!-- Submit Button -->
                    <div class="pt-4 sm:pt-6">
                        <button type="submit"
                                class="px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center gap-2" style="background-color:var(--primary)">
                            
                            Create Controller
                        </button>
                    </div>
                </div>
            </EditForm>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="text-center p-6 sm:p-8">
            <div class="mx-auto max-w-md">
                <i class="fas fa-ban text-red-500 text-3xl sm:text-4xl mb-4"></i>
                <h3 class="text-lg sm:text-xl font-semibold text-gray-800 mb-2">Unauthorized Access</h3>
                <p class="text-gray-600 text-sm sm:text-base">You don't have permission to create controllers</p>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private CreateControllerDto NewController = new();
    private bool IsAdmin;
    private string ErrorMessage = string.Empty;

    private async Task SubmitCreateControllerForm()
    {
        try
        {
            HttpResponseMessage result = await ApiService.PostAsync<CreateControllerDto>("/api/controller/create", NewController);

            if (!result.IsSuccessStatusCode)
            {
                var response = await result.Content.ReadFromJsonAsync<ApiResponse<object>>();
                if (response?.Data is JsonElement jsonElement && jsonElement.ValueKind == JsonValueKind.Array)
                {
                    var errors = JsonSerializer.Deserialize<List<string>>(jsonElement.GetRawText());
                    foreach (var error in errors)
                    {
                        toastService.Notify(new ToastMessage(ToastType.Danger, IconName.Bug, "Error", error));
                    }
                }
                else
                {
                    ErrorMessage = "Controller creation failed: " + response?.Data;
                }
            }
            else
            {
                toastService.Notify(new ToastMessage(ToastType.Success, IconName.HandThumbsUp, "Controller Created Successfully", "The Controller was Created Successfully"));

                // Reset form and navigate
                NewController = new CreateControllerDto();
                StateHasChanged();
                navigationManager.NavigateTo("/manage-controllers", false, false);
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = "An unexpected error occurred: " + ex.Message;
        }
    }
}