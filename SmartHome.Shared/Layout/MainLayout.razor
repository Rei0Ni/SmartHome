@inherits LayoutComponentBase
@inject NavigationManager NavManager


<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
@* <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous"> *@
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" rel="stylesheet" />
@* <link href="_content/Blazor.Bootstrap/blazor.bootstrap.css" rel="stylesheet" /> *@
<style>
    a { 
    text-decoration: none;
    }
</style>
<AuthorizeView>
    <Authorized>
        <div class="@(toggleDark ? "dark" : null)">
            @* <Toasts class="p-3" AutoHide="true" Delay="4000" Placement="ToastsPlacement.TopRight" /> *@
            <BlazoredToasts Position="ToastPosition.TopRight"
                Timeout="5"
                IconType="IconType.FontAwesome"
                SuccessClass="blazored-toast-success"
                SuccessIcon="fa fa-check"
                InfoClass="blazored-toast-info"
                InfoIcon="fa fa-info"
                WarningClass="blazored-toast-warning"
                WarningIcon="fa fa-exclamation"
                ErrorClass="blazored-toast-error"
                ErrorIcon="fa fa-times" />

            <!-- Vertical Sidebar -->
            <div class="flex min-h-screen ">
                <aside class="navbar-vertical @sidebarClass hidden md:block text-white fixed h-full transition-all duration-200 ease-in-out flex flex-col"
                       style="box-shadow: 0px 4px 12px rgb(0 0 0 / 63%);" id="">
                    <div class="flex-1">
                        <div>
                            <!-- Collapse Toggle -->
                            <div class="flex @(isCollapsed ? "justify-center" : "Justify-start") p-4">
                                <button @onclick="ToggleSidebar" class="text-white cursor-pointer px-2">
                                    <i class="fas fa-@(isCollapsed ? "bars" : "chevron-left") text-xl"></i>
                                </button>
                                <span class="ml-3 @(isCollapsed ? "hidden" : "block") text-white whitespace-nowrap overflow-hidden text-ellipsis" id="navbar-title">Smart Home</span>
                            </div>

                            <!-- Menu Items -->
                            <nav class="space-y-4 px-2">

                                <NavLink href="/overview" class="@GetNavItemClass("/overview")" style="height: 44px;">
                                    <i class="bi bi-columns-gap text-xl text-white @(isCollapsed ? "mx-auto" : "px-1")"></i>
                                    <span class="ml-3 @(isCollapsed ? "hidden" : "block") text-white whitespace-nowrap overflow-hidden text-ellipsis">Overview</span>
                                </NavLink>

                                <NavLink href="/logs" class="@GetNavItemClass("/logs")" style="height: 44px;">
                                    <i class="fas fa-list text-xl text-white @(isCollapsed ? "mx-auto" : "px-1")"></i>
                                    <span class="ml-3 @(isCollapsed ? "hidden" : "block") text-white whitespace-nowrap overflow-hidden text-ellipsis">Logs</span>
                                </NavLink>

                                @if (context.User.IsInRole("Admin"))
                                {
                                    <NavLink href="/manage-users" class="@GetNavItemClass("/manage-users")" style="height: 44px;">
                                        <i class="bi bi-people text-xl text-white @(isCollapsed ? "mx-auto" : "px-1")"></i>
                                        <span class="ml-3 @(isCollapsed ? "hidden" : "block") text-white whitespace-nowrap overflow-hidden text-ellipsis">Manage Users</span>
                                    </NavLink>

                                    <NavLink href="/manage-controllers" class="@GetNavItemClass("/manage-controllers")" style="height: 44px;">
                                        <i class="bi bi-motherboard text-xl text-white @(isCollapsed ? "mx-auto" : "px-1")"></i>
                                        <span class="ml-3 @(isCollapsed ? "hidden" : "block") text-white whitespace-nowrap overflow-hidden text-ellipsis">Manage Controllers</span>
                                    </NavLink>

                                    <NavLink href="/manage-areas" class="@GetNavItemClass("/manage-areas")" style="height: 44px;">
                                        <i class="bi bi-geo-alt-fill text-xl text-white @(isCollapsed ? "mx-auto" : "px-1")"></i>
                                        <span class="ml-3 @(isCollapsed ? "hidden" : "block") text-white whitespace-nowrap overflow-hidden text-ellipsis">Manage Areas</span>
                                    </NavLink>

                                    <NavLink href="/manage-devices" class="@GetNavItemClass("/manage-devices")" style="height: 44px;">
                                        <i class="bi bi-lightbulb text-xl text-white @(isCollapsed ? "mx-auto" : "px-1")"></i>
                                        <span class="ml-3 @(isCollapsed ? "hidden" : "block") text-white whitespace-nowrap overflow-hidden text-ellipsis">Manage Devices</span>
                                    </NavLink>
                                }
                            </nav>
                        </div>
                    </div>
                    @if (context.User.IsInRole("Admin"))
                    {
                        <!-- Settings at Bottom -->
                        <div class="absolute p-2 bottom-0 left-0 right-0">
                            <NavLink href="/settings" class="@GetNavItemClass("/settings")" style="height: 44px;">
                                <i class="fas fa-cog text-xl text-white @(isCollapsed ? "mx-auto" : "px-1")"></i>
                                <span class="ml-3 @(isCollapsed ? "hidden" : "block") text-white whitespace-nowrap overflow-hidden text-ellipsis">Settings</span>
                            </NavLink>
                        </div>
                    }
                </aside>
                <!-- Main Content -->
                <main class="flex flex-col w-full @mainContentClass md-ml-0 transition-all duration-200" style="background-color:#F0F4F8;">
                    <!-- Horizontal Navbar -->
                    <nav class="navbar-horizontal sticky top-0 z-10">
                        <div class="mx-auto px-4">
                            <div class="flex justify-between items-center h-16">
                                <!-- Left Section (Weather on Desktop) -->
                                <div class="hidden md:flex items-center space-x-2">
                                    @*     @* <i class="temperature-icon fas fa-cloud-sun text-xl" style=""></i> *@
                                    @*     @* <span class="">28°C</span> *@
                                </div>

                                <!-- Mobile Menu Button -->
                                <button @onclick="ToggleMobileMenu" class="md:hidden text-gray-600">
                                    <i class="fas fa-bars text-xl text-white"></i>
                                </button>

                                <!-- Right Section (User & Notifications) -->
                                <div class="flex items-center relative">

                                    <div class="flex items-center space-x-2">
                                        <div class="w-8 h-8 rounded-full bg-gray-200 flex items-center justify-center overflow-hidden">
                                            @if (profilePictureStream != null)
                                            {
                                                <img src="data:image/png;base64,@Convert.ToBase64String(profilePictureStream)"
                                                     class="w-8 h-8 rounded-full cursor-pointer"
                                                     alt="User Avatar"
                                                     @onclick="ToggleUserMenu">
                                            }
                                            else
                                            {
                                                <div class="w-8 h-8 rounded-full flex justify-center items-center cursor-pointer" @onclick="ToggleUserMenu">
                                                    <svg class="w-7 h-7 " style="color: var(--primary);" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                                                    </svg>
                                                </div>

                                            }
                                        </div>
                                    </div>

                                    <!-- w-8 h-8 deafult for user prof -->
                                    <!-- User Menu Popup -->
                                    @if (showUserMenu)
                                    {
                                        <div class="fixed inset-0 z-50" @onclick="ToggleUserMenu"></div>
                                        <div class="absolute top-8 right-0 mt-2 w-48 bg-surface rounded-lg shadow-lg py-2 z-50">
                                            <!-- User Info Section -->
                                            <div class="flex flex-col items-center px-4 py-3 border-b dark:border-gray-600">
                                                <div class="rounded-full bg-gray-200 flex flex-col items-center">
                                                    @if (profilePictureStream != null)
                                                    {
                                                        <img src="data:image/png;base64,@Convert.ToBase64String(profilePictureStream)"
                                                             class="w-12 h-12 rounded-full cursor-pointer"
                                                             alt="User Avatar">
                                                    }
                                                    else
                                                    {
                                                        <div class="w-13 h-13 rounded-full flex justify-center items-center m-2">
                                                            <svg class="w-12 h-12 " style="color: var(--primary);" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                                                            </svg>
                                                        </div>

                                                    }
                                                </div>
                                                <span class="text-sm font-semibold mt-3 text-gray-800 dark:text-gray-50">Hey, @context.User.Identity.Name</span>
                                            </div>



                                            <!-- Menu Items -->
                                            <div class="px-2 py-2">
                                                <div class="px-2 py-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded cursor-pointer" @onclick:stopPropagation>
                                                    <div class="flex items-center space-x-3" @onclick="@(x => navigationManager.NavigateTo("/profile"))">
                                                        <i class="fa-solid fa-circle-user text-black dark:text-gray-50 text-sm"></i>
                                                        <span class="text-gray-700 dark:text-gray-50 text-sm">Profile</span>
                                                    </div>
                                                </div>

                                                @if (context.User.IsInRole("Admin"))
                                                {
                                                    <div class="px-2 py-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded cursor-pointer" @onclick:stopPropagation>
                                                        <div class="flex items-center space-x-3" @onclick="@(x => navigationManager.NavigateTo("/settings"))">
                                                            <i class="fa-solid fa-gear text-black dark:text-gray-50 text-sm"></i>
                                                            <span class="text-gray-700 dark:text-gray-50 text-sm">Settings</span>
                                                        </div>
                                                    </div>
                                                }

                                                <div class="px-2 py-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded cursor-pointer" @onclick:stopPropagation>
                                                    <div class="flex items-center space-x-3" @onclick="logout">
                                                        <i class="fa-solid fa-arrow-right-from-bracket text-black dark:text-gray-50 text-sm"></i>
                                                        <span class="text-gray-700 dark:text-gray-50 text-sm">Logout</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    <!-- end User Menu Popup -->
                                </div>
                            </div>
                        </div>
                    </nav>
                    <article class="content flex-1 px-3 pt-4 md:px-3 lg:px-4 bg-background">
                        @Body
                    </article>
                </main>
            </div>

            <!-- Mobile Menu (Popup) -->
            @if (showMobileMenu)
            {
                <div class="fixed inset-0 z-50 bg-black bg-opacity-50" @onclick="ToggleMobileMenu">
                    <div class="w-3/4 h-full p-4 transform transition-transform" style="background-color:var(--menu-bg);">
                        <!-- Header -->
                        <div class="pb-4 mb-2 border-b border-gray-200 flex justify-between items-center">
                            <div class="flex items-center">
                                <img src="_content/SmartHome.Shared/imgs/logotest2.svg" alt="logo" class="w-10" />
                                <h2 class="text-xl font-bold text-gray-800 dark:text-gray-50 pl-2 m-0 mt-1">Smart Home</h2>
                            </div>

                            <div>
                                <button @onclick="OnInitialized" class="text-gray-600 dark:text-gray-50 flex items-center">
                                    <i class="fas fa-times text-xl text-black dark:text-gray-50 dark:text-gray-50"></i>
                                </button>
                            </div>
                        </div>

                        <!-- Menu Items -->
                        <nav class="space-y-4">
                            <NavLink href="/overview" class="block p-2 hover:bg-purple-300  rounded-md" style="color: var(--menubar-color)">
                                <i class="bi bi-columns-gap text-xl text-black dark:text-gray-50 pe-2"></i>
                                OverView
                            </NavLink>

                            <NavLink href="/logs" class="block p-2 hover:bg-purple-300  rounded-md" style="color: var(--menubar-color)">
                                <i class="fas fa-list text-xl text-black dark:text-gray-50 pe-2"></i>
                                Logs
                            </NavLink>

                            @if (context.User.IsInRole("Admin"))
                            {
                                <NavLink href="/manage-users" class="block p-2 hover:bg-purple-300  rounded-md" style="color: var(--menubar-color)">
                                    <i class="bi bi-people text-xl text-black dark:text-gray-50 pe-2"></i>
                                    Manage Users
                                </NavLink>

                                <NavLink href="/manage-controllers" class="block p-2 hover:bg-purple-300  rounded-md" style="color: var(--menubar-color)">
                                    <i class="bi bi-motherboard text-xl text-black dark:text-gray-50 pe-2"></i>
                                    Manage Controllers
                                </NavLink>

                                <NavLink href="/manage-areas" class="block p-2 hover:bg-purple-300  rounded-md" style="color: var(--menubar-color)">
                                    <i class="bi bi-geo-alt-fill text-xl text-black dark:text-gray-50 pe-2"></i>
                                    Manage Areas
                                </NavLink>

                                <NavLink href="/manage-devices" class="block p-2 hover:bg-purple-300  rounded-md" style="color: var(--menubar-color)">
                                    <i class="bi bi-lightbulb text-xl text-black dark:text-gray-50 pe-2"></i>
                                    Manage Devcies
                                </NavLink>
                            }

                            @if (context.User.IsInRole("Admin"))
                            {
                                <NavLink href="/Settings" class="absolute bottom-0 mb-4 block p-2 hover:bg-purple-300  rounded-md" style="width: 85%; color: var(--menubar-color);">
                                    <i class="fas fa-cog text-xl w-8 text-black dark:text-gray-50 pe-2"></i>
                                    Settings
                                </NavLink>
                            }
                            @if (PlatformDetectionService.IsMobile() && context.User.IsInRole("Normal_User"))
                            {
                                <NavLink href="/Settings" class="absolute bottom-0 mb-4 block p-2 hover:bg-purple-300 rounded-md" style="width: 85%; color: var(--menubar-color);">
                                    <i class="fas fa-cog text-xl w-8 text-black dark:text-gray-50 pe-2"></i>
                                    Settings
                                </NavLink>
                            }
                        </nav>
                    </div>
                </div>
            }
            <!-- end Mobile Menu (popup)-->

            @* <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script> *@

            <!-- Add sortable.js reference if SortableList component is used in your application. -->
            <script src="https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js"></script>
            @* <script src="_content/Blazor.Bootstrap/blazor.bootstrap.js"></script> *@
        </div>
    </Authorized>
    <NotAuthorized>
        @{
            navigationManager.NavigateTo("/login");
        }
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool isCollapsed = true;
    private bool showMobileMenu = false;

    private string sidebarClass => isCollapsed ? "w-16" : "w-64";
    private string mainContentClass => isCollapsed ? "ml-0 md:ml-16 lg:ml-16" : "ml-0 md:ml-64 lg:ml-64";

    private void ToggleSidebar() => isCollapsed = !isCollapsed;
    private void ToggleMobileMenu() => showMobileMenu = !showMobileMenu;

    private byte[]? profilePictureStream;

    private bool toggleDark = false;

    private string GetNavItemClass(string page)
    {
        bool isActive = navigationManager.Uri.EndsWith(page);
        string justifyClass = isCollapsed ? "justify-center" : "justify-start";
        // string sizeClass = isCollapsed ? "w-12 h-12 justify-center" : "w-full";
        return $"flex items-center p-2 hover:bg-gray-700 rounded-lg {justifyClass} {(isActive ? "bg-gray-800" : "")}";
    }
    // to centerlized icons
    // private string GetIconAlignmentClass()
    // {
    //     return isCollapsed ? "display: flex; justify - content: center; align - items: center; " : "";
    // }


    private bool showUserMenu = false;

    // private void ToggleUserMenu()
    // {
    //     showUserMenu = !showUserMenu;
    // }

    // to close other menu
    protected override async Task OnInitializedAsync()
    {
        navigationManager.LocationChanged += async (sender, args) =>
        {
            showUserMenu = false;
            showMobileMenu = false;
            GetCurrentTheme();
            StateHasChanged();
        };

        ThemeService.OnThemeChanged += GetCurrentTheme;

        GetCurrentTheme();

        await FetchProfilePicture();
    }

    private async void GetCurrentTheme()
    {
        var currentTheme = await ThemeService.GetThemeAsync();
        if (currentTheme!.ToLower() == "dark")
        {
            toggleDark = true;
        }
        else
        {
            toggleDark = false;
        }
        StateHasChanged();
    }

    private async Task FetchProfilePicture()
    {
        try
        {
            var response = await ApiService.GetAsync("/api/user/get/profile-picture");

            if (response.IsSuccessStatusCode)
            {
                profilePictureStream = await response.Content.ReadAsByteArrayAsync();
            }
            else
            {
                profilePictureStream = null;
            }
        }
        catch (Exception ex)
        {
            profilePictureStream = null;
        }
    }

    // logout
    private async void logout()
    {
        await authStateProvider.Logout();
        navigationManager.NavigateTo("/", true);
    }


    // Notification
    private bool showNotifications = false;

    private void ToggleNotifications()
    {
        showNotifications = !showNotifications;
        if (showNotifications)
        {
            showUserMenu = false;
            showMobileMenu = false;
        }
    }

    // close Notification
    private void ToggleUserMenu()
    {
        showUserMenu = !showUserMenu;
        if (showUserMenu)
        {
            showNotifications = false;
            showMobileMenu = false;
        }
    }

    // private void ToggleMobileMenu()
    // {
    //     showMobileMenu = !showMobileMenu;
    //     if (showMobileMenu)
    //     {
    //         showNotifications = false;
    //         showUserMenu = false;
        //     }
    // }
}