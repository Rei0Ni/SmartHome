# Use 'auto' to adjust to the number of CPU cores, or set explicitly
worker_processes auto;

# Standard error log location inside the container
error_log /var/log/nginx/error.log warn;

events {
    worker_connections 1024; # Adjust if needed based on expected load
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Define a log format including useful proxy information
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # Standard access log location inside the container
    access_log /var/log/nginx/access.log main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout 65;
    # Allow larger client request bodies if needed (e.g., for file uploads)
    client_max_body_size 100m;

    # Enable Gzip compression for better performance
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;
    gzip_min_length 1000;

    # --- Define Upstream for SmartHome API ---
    upstream smarthome_api_upstream {
        server smarthome-api:62062;
        keepalive 16;
    }

    # --- Define Upstream for SmartHome Web ---
    upstream smarthome_web_upstream {
        server smarthome-web:5042;
        keepalive 16;
    }
    # --- Server Block for HTTP (Port 80) ---
    # Redirects all HTTP traffic to HTTPS (defaults to 443 unless specified otherwise)
    # Clients wanting the API on 62061 would typically need to connect directly via HTTPS on that port.
    server {
        listen 80;
        # Replace with your actual domain name(s) or use '_' for default/catch-all
        server_name yourdomain.com www.yourdomain.com 192.168.1.9 _; # Added IP back based on original conf

        # Redirect to the main web app HTTPS port (443)
        location / {
             return 301 https://$host$request_uri;
        }
    }

    # --- Server Block for Web App (Port 443) ---
    server {
        listen 443 ssl http2; # Listen on standard HTTPS port
        # Replace/confirm domain name(s) or IP
        server_name _;

        # --- SSL Configuration ---
        ssl_certificate "/etc/nginx/certs/fullchain.crt";
        ssl_certificate_key "/etc/nginx/certs/server.pem";
        # Include recommended SSL settings (protocols, ciphers, etc. - see previous example)
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        # Add other SSL settings like session cache, HSTS if desired

        # --- Location Block for Proxying to Web App ---
        location / {
            proxy_pass http://smarthome_web_upstream; # Use the upstream for the web container

            # --- Essential Proxy Headers ---
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # --- Add WebSocket Headers IF your web app uses them ---
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;

            # --- Proxy Timeouts ---
            proxy_connect_timeout 60s;
            proxy_send_timeout   600s;
            proxy_read_timeout   600s;
        }
    }

    # --- Server Block for SmartHome API (Port 62061) ---
    server {
        listen 62061 ssl http2; # Listen on custom HTTPS port for the API
        # Replace/confirm domain name(s) or IP - often same as 443 if accessed via IP
        server_name _;

        # --- SSL Configuration ---
        # Using the same certificate as port 443
        ssl_certificate "/etc/nginx/certs/fullchain.crt";
        ssl_certificate_key "/etc/nginx/certs/server.pem";
        # Include recommended SSL settings (protocols, ciphers, etc. - see previous example)
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        # Add other SSL settings like session cache, HSTS if desired

        # --- Location Block for Proxying to SmartHome API ---
        location / {
            # Pass requests to the upstream API service defined earlier
            proxy_pass http://smarthome_api_upstream;

            # --- Essential Proxy Headers ---
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # --- WebSocket Headers (Needed for SignalR in SmartHome API) ---
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;

            # --- Proxy Timeouts ---
            proxy_connect_timeout 60s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
        }
    }
}